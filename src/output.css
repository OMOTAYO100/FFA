/*! tailwindcss v4.1.10 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-purple-400: oklch(71.4% 0.203 305.504);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-sm: 40rem;
    --breakpoint-2xl: 96rem;
    --container-md: 28rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-2xl: 1rem;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .top-12 {
    top: calc(var(--spacing) * 12);
  }
  .right-6 {
    right: calc(var(--spacing) * 6);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
  .size-12 {
    width: calc(var(--spacing) * 12);
    height: calc(var(--spacing) * 12);
  }
  .size-20 {
    width: calc(var(--spacing) * 20);
    height: calc(var(--spacing) * 20);
  }
  .size-24 {
    width: calc(var(--spacing) * 24);
    height: calc(var(--spacing) * 24);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .max-h-fit {
    max-height: fit-content;
  }
  .w-14 {
    width: calc(var(--spacing) * 14);
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-screen-sm {
    max-width: var(--breakpoint-sm);
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .appearance-none {
    appearance: none;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-1 {
    column-gap: calc(var(--spacing) * 1);
  }
  .gap-y-2 {
    row-gap: calc(var(--spacing) * 2);
  }
  .gap-y-3 {
    row-gap: calc(var(--spacing) * 3);
  }
  .gap-y-4 {
    row-gap: calc(var(--spacing) * 4);
  }
  .gap-y-5 {
    row-gap: calc(var(--spacing) * 5);
  }
  .gap-y-6 {
    row-gap: calc(var(--spacing) * 6);
  }
  .gap-y-8 {
    row-gap: calc(var(--spacing) * 8);
  }
  .gap-y-12 {
    row-gap: calc(var(--spacing) * 12);
  }
  .self-center {
    align-self: center;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-\[\#221529\] {
    border-color: #221529;
  }
  .border-blue-400 {
    border-color: var(--color-blue-400);
  }
  .border-blue-400\/40 {
    border-color: color-mix(in srgb, oklch(70.7% 0.165 254.624) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-blue-400) 40%, transparent);
    }
  }
  .border-green-400 {
    border-color: var(--color-green-400);
  }
  .border-green-400\/40 {
    border-color: color-mix(in srgb, oklch(79.2% 0.209 151.711) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-green-400) 40%, transparent);
    }
  }
  .border-orange-400 {
    border-color: var(--color-orange-400);
  }
  .border-orange-400\/40 {
    border-color: color-mix(in srgb, oklch(75% 0.183 55.934) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-orange-400) 40%, transparent);
    }
  }
  .border-red-300 {
    border-color: var(--color-red-300);
  }
  .bg-\[\#1ab98f\] {
    background-color: #1ab98f;
  }
  .bg-\[\#bbbcdc\] {
    background-color: #bbbcdc;
  }
  .bg-\[\#f0f2fc\] {
    background-color: #f0f2fc;
  }
  .bg-blue-300 {
    background-color: var(--color-blue-300);
  }
  .bg-blue-400 {
    background-color: var(--color-blue-400);
  }
  .bg-blue-400\/10 {
    background-color: color-mix(in srgb, oklch(70.7% 0.165 254.624) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-400) 10%, transparent);
    }
  }
  .bg-blue-400\/40 {
    background-color: color-mix(in srgb, oklch(70.7% 0.165 254.624) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-400) 40%, transparent);
    }
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-blue-600\/50 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 50%, transparent);
    }
  }
  .bg-green-400 {
    background-color: var(--color-green-400);
  }
  .bg-green-400\/10 {
    background-color: color-mix(in srgb, oklch(79.2% 0.209 151.711) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-green-400) 10%, transparent);
    }
  }
  .bg-green-400\/40 {
    background-color: color-mix(in srgb, oklch(79.2% 0.209 151.711) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-green-400) 40%, transparent);
    }
  }
  .bg-orange-400 {
    background-color: var(--color-orange-400);
  }
  .bg-orange-400\/10 {
    background-color: color-mix(in srgb, oklch(75% 0.183 55.934) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-orange-400) 10%, transparent);
    }
  }
  .bg-orange-400\/40 {
    background-color: color-mix(in srgb, oklch(75% 0.183 55.934) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-orange-400) 40%, transparent);
    }
  }
  .bg-purple-600 {
    background-color: var(--color-purple-600);
  }
  .bg-purple-600\/50 {
    background-color: color-mix(in srgb, oklch(55.8% 0.288 302.321) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-purple-600) 50%, transparent);
    }
  }
  .bg-red-300 {
    background-color: var(--color-red-300);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }
  .bg-yellow-500\/50 {
    background-color: color-mix(in srgb, oklch(79.5% 0.184 86.047) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-yellow-500) 50%, transparent);
    }
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-\[\#221529\] {
    color: #221529;
  }
  .text-blue-300 {
    color: var(--color-blue-300);
  }
  .text-blue-400 {
    color: var(--color-blue-400);
  }
  .text-blue-400\/60 {
    color: color-mix(in srgb, oklch(70.7% 0.165 254.624) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-blue-400) 60%, transparent);
    }
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-blue-500\/40 {
    color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-blue-500) 40%, transparent);
    }
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-green-400 {
    color: var(--color-green-400);
  }
  .text-green-400\/60 {
    color: color-mix(in srgb, oklch(79.2% 0.209 151.711) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-green-400) 60%, transparent);
    }
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-orange-400 {
    color: var(--color-orange-400);
  }
  .text-orange-400\/60 {
    color: color-mix(in srgb, oklch(75% 0.183 55.934) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-orange-400) 60%, transparent);
    }
  }
  .text-orange-500 {
    color: var(--color-orange-500);
  }
  .text-orange-500\/40 {
    color: color-mix(in srgb, oklch(70.5% 0.213 47.604) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-orange-500) 40%, transparent);
    }
  }
  .text-purple-400 {
    color: var(--color-purple-400);
  }
  .text-purple-400\/60 {
    color: color-mix(in srgb, oklch(71.4% 0.203 305.504) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-purple-400) 60%, transparent);
    }
  }
  .text-red-300 {
    color: var(--color-red-300);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[\#1ab98f\] {
    --tw-shadow-color: #1ab98f;
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, #1ab98f var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-red-500 {
    --tw-shadow-color: oklch(63.7% 0.237 25.331);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-red-500) var(--tw-shadow-alpha), transparent);
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .\*\:flex {
    :is(& > *) {
      display: flex;
    }
  }
  .\*\:basis-2\/4 {
    :is(& > *) {
      flex-basis: calc(2/4 * 100%);
    }
  }
  .\*\:flex-col {
    :is(& > *) {
      flex-direction: column;
    }
  }
  .\*\:items-center {
    :is(& > *) {
      align-items: center;
    }
  }
  .\*\:justify-center {
    :is(& > *) {
      justify-content: center;
    }
  }
  .\*\:space-y-4 {
    :is(& > *) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .\*\:gap-x-2 {
    :is(& > *) {
      column-gap: calc(var(--spacing) * 2);
    }
  }
  .\*\:gap-y-2 {
    :is(& > *) {
      row-gap: calc(var(--spacing) * 2);
    }
  }
  .\*\:gap-y-5 {
    :is(& > *) {
      row-gap: calc(var(--spacing) * 5);
    }
  }
  .\*\:p-8 {
    :is(& > *) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .\*\:text-center {
    :is(& > *) {
      text-align: center;
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:h-6 {
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 6);
    }
  }
  .before\:w-6 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 6);
    }
  }
  .before\:scale-110 {
    &::before {
      content: var(--tw-content);
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:bg-\[\#221529\] {
    &::before {
      content: var(--tw-content);
      background-color: #221529;
    }
  }
  .before\:duration-300 {
    &::before {
      content: var(--tw-content);
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .checked\:bg-slate-900 {
    &:checked {
      background-color: var(--color-slate-900);
    }
  }
  .checked\:before\:translate-x-8 {
    &:checked {
      &::before {
        content: var(--tw-content);
        --tw-translate-x: calc(var(--spacing) * 8);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .checked\:before\:bg-slate-300 {
    &:checked {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-slate-300);
      }
    }
  }
  .sm\:top-24 {
    @media (width >= 40rem) {
      top: calc(var(--spacing) * 24);
    }
  }
  .sm\:right-8 {
    @media (width >= 40rem) {
      right: calc(var(--spacing) * 8);
    }
  }
  .sm\:col-span-2 {
    @media (width >= 40rem) {
      grid-column: span 2 / span 2;
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:flex-row-reverse {
    @media (width >= 40rem) {
      flex-direction: row-reverse;
    }
  }
  .sm\:justify-between {
    @media (width >= 40rem) {
      justify-content: space-between;
    }
  }
  .sm\:justify-end {
    @media (width >= 40rem) {
      justify-content: flex-end;
    }
  }
  .sm\:self-start {
    @media (width >= 40rem) {
      align-self: flex-start;
    }
  }
  .sm\:px-8 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .sm\:py-20 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 20);
    }
  }
  .sm\:text-6xl {
    @media (width >= 40rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .sm\:\*\:items-center {
    @media (width >= 40rem) {
      :is(& > *) {
        align-items: center;
      }
    }
  }
  .sm\:\*\:gap-x-5 {
    @media (width >= 40rem) {
      :is(& > *) {
        column-gap: calc(var(--spacing) * 5);
      }
    }
  }
  .md\:absolute {
    @media (width >= 48rem) {
      position: absolute;
    }
  }
  .md\:relative {
    @media (width >= 48rem) {
      position: relative;
    }
  }
  .md\:-left-10 {
    @media (width >= 48rem) {
      left: calc(var(--spacing) * -10);
    }
  }
  .md\:-left-12 {
    @media (width >= 48rem) {
      left: calc(var(--spacing) * -12);
    }
  }
  .md\:mx-auto {
    @media (width >= 48rem) {
      margin-inline: auto;
    }
  }
  .md\:w-2\/4 {
    @media (width >= 48rem) {
      width: calc(2/4 * 100%);
    }
  }
  .md\:w-5\/6 {
    @media (width >= 48rem) {
      width: calc(5/6 * 100%);
    }
  }
  .md\:\[transform\:rotateY\(0\.5turn\)\] {
    @media (width >= 48rem) {
      transform: rotateY(0.5turn);
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:flex-row-reverse {
    @media (width >= 48rem) {
      flex-direction: row-reverse;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:justify-center {
    @media (width >= 48rem) {
      justify-content: center;
    }
  }
  .md\:gap-x-6 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 6);
    }
  }
  .md\:gap-x-10 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 10);
    }
  }
  .md\:gap-x-12 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 12);
    }
  }
  .md\:gap-x-25 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 25);
    }
  }
  .md\:gap-y-3 {
    @media (width >= 48rem) {
      row-gap: calc(var(--spacing) * 3);
    }
  }
  .md\:gap-y-10 {
    @media (width >= 48rem) {
      row-gap: calc(var(--spacing) * 10);
    }
  }
  .md\:self-center {
    @media (width >= 48rem) {
      align-self: center;
    }
  }
  .md\:text-center {
    @media (width >= 48rem) {
      text-align: center;
    }
  }
  .md\:\*\:basis-2\/4 {
    @media (width >= 48rem) {
      :is(& > *) {
        flex-basis: calc(2/4 * 100%);
      }
    }
  }
  .lg\:right-12 {
    @media (width >= 64rem) {
      right: calc(var(--spacing) * 12);
    }
  }
  .lg\:col-span-1 {
    @media (width >= 64rem) {
      grid-column: span 1 / span 1;
    }
  }
  .lg\:scale-110 {
    @media (width >= 64rem) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:flex-col {
    @media (width >= 64rem) {
      flex-direction: column;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:justify-center {
    @media (width >= 64rem) {
      justify-content: center;
    }
  }
  .lg\:px-12 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .\32 xl\:top-32 {
    @media (width >= 96rem) {
      top: calc(var(--spacing) * 32);
    }
  }
  .\32 xl\:left-2\/4 {
    @media (width >= 96rem) {
      left: calc(2/4 * 100%);
    }
  }
  .\32 xl\:mx-auto {
    @media (width >= 96rem) {
      margin-inline: auto;
    }
  }
  .\32 xl\:my-8 {
    @media (width >= 96rem) {
      margin-block: calc(var(--spacing) * 8);
    }
  }
  .\32 xl\:w-auto {
    @media (width >= 96rem) {
      width: auto;
    }
  }
  .\32 xl\:max-w-screen-2xl {
    @media (width >= 96rem) {
      max-width: var(--breakpoint-2xl);
    }
  }
  .\32 xl\:rounded-2xl {
    @media (width >= 96rem) {
      border-radius: var(--radius-2xl);
    }
  }
  .\32 xl\:border {
    @media (width >= 96rem) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .\32 xl\:border-blue-300 {
    @media (width >= 96rem) {
      border-color: var(--color-blue-300);
    }
  }
  .dark\:rounded {
    &:where(.dark, .dark *) {
      border-radius: 0.25rem;
    }
  }
  .dark\:border {
    &:where(.dark, .dark *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .dark\:border-2 {
    &:where(.dark, .dark *) {
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
  .dark\:border-\[\#9b9b9b\] {
    &:where(.dark, .dark *) {
      border-color: #9b9b9b;
    }
  }
  .dark\:border-blue-400 {
    &:where(.dark, .dark *) {
      border-color: var(--color-blue-400);
    }
  }
  .dark\:border-blue-400\/60 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(70.7% 0.165 254.624) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-blue-400) 60%, transparent);
      }
    }
  }
  .dark\:border-blue-600\/50 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-blue-600) 50%, transparent);
      }
    }
  }
  .dark\:border-green-400 {
    &:where(.dark, .dark *) {
      border-color: var(--color-green-400);
    }
  }
  .dark\:border-green-400\/60 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(79.2% 0.209 151.711) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-green-400) 60%, transparent);
      }
    }
  }
  .dark\:border-orange-400 {
    &:where(.dark, .dark *) {
      border-color: var(--color-orange-400);
    }
  }
  .dark\:border-orange-400\/60 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(75% 0.183 55.934) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-orange-400) 60%, transparent);
      }
    }
  }
  .dark\:border-purple-600\/50 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(55.8% 0.288 302.321) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-purple-600) 50%, transparent);
      }
    }
  }
  .dark\:border-white {
    &:where(.dark, .dark *) {
      border-color: var(--color-white);
    }
  }
  .dark\:border-yellow-500\/50 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(79.5% 0.184 86.047) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-yellow-500) 50%, transparent);
      }
    }
  }
  .dark\:bg-\[\#22152\] {
    &:where(.dark, .dark *) {
      background-color: #22152;
    }
  }
  .dark\:bg-\[\#221529\] {
    &:where(.dark, .dark *) {
      background-color: #221529;
    }
  }
  .dark\:bg-transparent {
    &:where(.dark, .dark *) {
      background-color: transparent;
    }
  }
  .dark\:text-gray-400 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-400);
    }
  }
  .dark\:text-gray-500 {
    &:where(.dark, .dark *) {
      color: var(--color-gray-500);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:shadow-md {
    &:where(.dark, .dark *) {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:shadow-sm {
    &:where(.dark, .dark *) {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:shadow-blue-400 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: oklch(70.7% 0.165 254.624);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-blue-400) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-blue-400\/60 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in srgb, oklch(70.7% 0.165 254.624) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-blue-400) 60%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-green-400 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: oklch(79.2% 0.209 151.711);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-green-400) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-green-400\/60 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in srgb, oklch(79.2% 0.209 151.711) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-green-400) 60%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-orange-400 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: oklch(75% 0.183 55.934);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-orange-400) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-orange-400\/60 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in srgb, oklch(75% 0.183 55.934) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-orange-400) 60%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-purple-400\/60 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in srgb, oklch(71.4% 0.203 305.504) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-purple-400) 60%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-white {
    &:where(.dark, .dark *) {
      --tw-shadow-color: #fff;
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, var(--color-white) var(--tw-shadow-alpha), transparent);
      }
    }
  }
}
@layer base {
  body {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  a {
    border-radius: 0.25rem;
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  img {
    height: 100%;
    border-radius: 0.25rem;
    object-fit: cover;
  }
}
@layer components {
  .component {
    display: flex;
    flex-direction: column;
    row-gap: calc(var(--spacing) * 12);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 8);
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 20);
    }
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
    @media (width >= 96rem) {
      margin-block: calc(var(--spacing) * 8);
    }
    @media (width >= 96rem) {
      border-radius: var(--radius-2xl);
    }
    @media (width >= 96rem) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
    @media (width >= 96rem) {
      border-color: var(--color-blue-300);
    }
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-content: "";
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
    }
  }
}
